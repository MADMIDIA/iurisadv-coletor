for doc in hits
    -let relevanciaColor = (per) => per < 0.2 ? '#E3D5A1' : per < 0.4 ? '#CEB65E' : per < 0.6 ? '#B49936' : per < 0.8 ? '#8C752C' : '#6C5A22';
    article.row.border-top.result
        .col-12.pt-1.d-flex
            small.relevancia(style=`color: ${relevanciaColor(doc._score/max_score)}`)
                each bin in [0.2,0.4,0.6,0.8,1]
                    if doc._score/max_score < bin
                        i.bi.bi-square.me-1
                    else
                        i.bi.bi-square-fill.me-1
            -let currUrl = `./p/${encodeURIComponent(doc._source["Número de Processo"])}/${doc._source.UUID.substr(0,6)}/?search=${searchId}`
            if doc._source.ECLI != "sem ECLI"
                -currUrl = `./p/ecli/${doc._source.ECLI}/?search=${searchId}`
            a(href=currUrl,target="_blank") !{doc._source["Número de Processo"]}
            span &nbsp;- #{doc._source.Data}
            if doc._source.Área
                span &nbsp;- #{doc._source.Área}
            if doc._source["Meio Processual"]
                span &nbsp;- #{doc._source["Meio Processual"].join(" / ")}
        .col-12.d-flex.flex-wrap
            div.mx-1
                b Relator:&nbsp;
                span #{doc._source["Relator Nome Profissional"]}
            div.mx-1
                b Secção:&nbsp;
                span #{doc._source.Secção}
        .col-12.d-flex.flex-wrap
            if doc._source["Votação - Decisão"]
                div.mx-1
                    b Votação:&nbsp;
                    span #{doc._source["Votação - Decisão"]}
            if doc._source["Decisão - Integral"]
                div.mx-1.d-flex
                    b Decisão - Integral:&nbsp;
                    div !{doc._source["Decisão - Integral"]}
        if Array.isArray(doc._source.Descritores)
            .col-12
                div.mx-1
                    b Descritores:&nbsp;
                    - let descritores = []
                    if doc.highlight && doc.highlight.Descritores
                        - descritores = doc._source.Descritores.map(origin => doc.highlight.Descritores.find(highlight => highlight.includes(origin)) ? `<mark>${origin}</mark>` : origin)
                    else 
                        - descritores = doc._source.Descritores
                    span !{descritores.join(' / ')}
        if doc._source.Sumário
            details.col-12
                summary.d-flex.align-items-center.list-unstyled
                    span(style="width: 10%; flex-shrink: 1;")
                        i.bi.bi-caret-downright-fill
                        b.mouse-click Sumário:
                    if doc.highlight && doc.highlight.SumárioMarks
                        .highlight
                            .highlight-bar(data-key="Sumário")
                                each hit in doc.highlight.SumárioMarks
                                    .highlight-bar-hit-parent
                                        .highlight-bar-hit(data-offset=hit.offset, data-per=hit.offset/hit.size, style=`left: ${hit.offset/hit.size*100}%; background: ${hit.color};`)
                                        .highlight-bar-hit-content.d-none !{hit.text}
                if doc.highlight && doc.highlight.Sumário
                    div.col-12.p-2.border.normalize-sumario-weight !{doc.highlight.Sumário}
                else
                    div.col-12.p-2.border.normalize-sumario-weight !{doc._source.Sumário}
                    
        if doc.highlight
            -let highlightKeys = Object.keys(doc.highlight).filter( o => o.match(/Texto/))
            if highlightKeys.length > 0
                details.col-12.d-print-none
                    summary.d-flex.align-items-center.list-unstyled
                        span(style="width: 10%; flex-shrink: 1;")
                            i.bi.bi-caret-downright-fill
                            b.mouse-click Texto Integral:
                        .highlight
                            for key of highlightKeys
                                .highlight-bar(data-key=key)
                                    each hit in doc.highlight[key]
                                        .highlight-bar-hit-parent
                                            .highlight-bar-hit(data-offset=hit.offset, data-per=hit.offset/hit.size, style=`left: ${hit.offset/hit.size*100}%; background: ${hit.color};`)
                                            .highlight-bar-hit-content.d-none !{hit.text}

                    div.col-12.p-2.border
                        for key of highlightKeys
                            each hit in doc.highlight[key]
                                | !{hit.text}
                                .pesquisa-sep