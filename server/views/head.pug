doctype html
html(lang="en")
    mixin await(url)
        span(data-await=url).await-loading
    head
        meta(charset="UTF-8")
        meta(http-equiv="X-UA-Compatible", content="IE=edge")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        link(rel="stylesheet",href="./style.css")
        link(rel="icon",href="/stj-logo.png")
        block head
    body
        block header
            header.mb-2
                form.container.row.align-items-center.m-auto.p-4
                    a(href="/").col-12.col-lg-6.align-items-center.d-flex.flex-wrap.py-2
                        img(src="/stj-logo.png", style="max-height: 70px;")
                        h2.ps-2 Jurisprudência
                    .col-12.col-lg-6.d-print-none
                        block headerinput
                            .input-group
                                input.form-control(type="search", name="q", placeholder="Pesquisar...", value=q||"", style="color: var(--color-gray);")
                                .input-group-append
                                    button.btn.btn-gold(type="submit"): i.bi-search
                    .col-12.col-lg-6.d-none.d-print-block
                        block printpageinfo
                            p Sem informação da página
                nav.w-100.d-print-none
                    ul.container.d-flex.nav.align-items-center.justify-content-evenly.flex-wrap
                        li.nav-item.py-1.px-2.mx-1
                            a.nav-link(href="/", class=currentPage=="search"?"active":""): h5.m-0 Pesquisa
                        li.nav-item.py-1.px-2.mx-1
                            a.nav-link(href="/stats", class=currentPage=="stats"?"active":""): h5.m-0 Estatística
                        li.nav-item.py-1.px-2.mx-1
                            a.nav-link(href="/list", class=currentPage=="list"?"active":""): h5.m-0 Listas
        main.container#top
            if error 
                pre.alert.alert-danger
                    code !{JSON.stringify(error, null , 2)}

            else
                .row
                    .col-12.col-md-3.d-print-none.infofilters
                        .row.p-2
                            form(method="get").col-12
                                block form
                                    input(type="search", name="q", value=q, hidden)
                                    details(open=!!open)
                                        summary.d-block
                                            h4.d-inline
                                                i.bi-funnel 
                                                | Filtrar 
                                                small: i.bi-minimizemaximize
                                        .d-flex.flex-column.my-2
                                            -let tribunais = []
                                            .form-check.form-check-inline
                                                input.form-check-input(type="checkbox", id="tribunais-all")
                                                label.form-check-label(for="tribunais-all"): h5 Tribunal
                                            -let key = "Tribunal"
                                            for bucket in aggs[key].buckets
                                                -let checked = !filters[key] || filters[key].indexOf(bucket.key) > -1
                                                if checked
                                                    -tribunais.push(bucket.key)
                                                .form-check.form-check-inline(data-tribunal=bucket.key)
                                                    input.form-check-input.tribunal-checkbox(type="checkbox", name=key, value=bucket.key, checked=checked, id=bucket.key.replace(/\s/g, ""), hidden)
                                                    label.form-check-label(for=bucket.key.replace(/\s/g, "")).d-flex.justify-content-between.align-items-center.w-100
                                                        span.d-block !{bucket.key} 
                                                        span.d-block (!{bucket.doc_count})
                                        mixin filterlist(key)
                                            .d-flex.flex-column.my-2
                                                h5 !{key}
                                                +await(`/datalist?id=datalist-${key}&agg=${key}&${querystring}`)
                                                input.form-control(type="text", name=key, autocomplete="off", list=`datalist-${key}`, placeholder=`Filtrar ${key}...`)
                                                -let cache = []
                                                if key in filters
                                                    for f in filters[key]
                                                        if cache.indexOf(f) == -1
                                                            -cache.push(f)
                                                            .form-check.form-check-inline(style="--tribunal-color: #0f0")
                                                                input.form-check-input(type="checkbox", name=key, value=f, checked, id=`checkbox-${f.replace(/\s/g, "")}`, hidden)
                                                                label.form-check-label(for=`checkbox-${f.replace(/\s/g, "")}`).d-flex.justify-content-between.align-items-center.w-100
                                                                    span.d-block !{f}
                                                                    i.d-blocl.bi-trash
                                        for p of Object.keys(properties)
                                            if p != "Tribunal"
                                                +filterlist(p)
                                        .d-flex.flex-column.my-2
                                            h5 Data
                                            .input-group
                                                .input-group-prepend.w-25
                                                    label(for="data_inicio").input-group-text.w-100 De
                                                input.form-control(type="number", name="MinAno", min="1900", max=new Date().getFullYear(), value=filters["MinAno"], step="1")#data_inicio
                                            .input-group
                                                .input-group-prepend.w-25
                                                    label(for="data_fim").input-group-text.w-100 Até
                                                input.form-control(type="number", name="MaxAno", min="1900", max=new Date().getFullYear(), value=filters["MaxAno"], step="1")#data_fim
                                        .d-flex.flex-row.my-2.justify-content-between.align-items-center
                                            button.btn.btn-primary(type="submit") Aplicar
                                            a.btn.btn-danger(href=`?q=${q || ""}`) Limpar
                                    if Number.isInteger(page) && Number.isInteger(pages)
                                        nav.my-2.sticky-top
                                            ul.pagination.justify-content-between
                                                li.page-item
                                                    button.btn(type="submit", name="page", value=0, disabled=page<=0).page-link: i.bi.bi-chevron-double-left
                                                li.page-item
                                                    button.btn(type="submit", name="page", value=page-1, disabled=page<=0).page-link: i.bi.bi-chevron-left
                                                li.page-item.w-50
                                                    button.btn(type="submit", name="page", value=page, disabled).page-link.w-100 !{page+1}/!{pages}
                                                li.page-item
                                                    button.btn(type="submit", name="page", value=page+1, disabled=page>=pages-1).page-link: i.bi.bi-chevron-right
                                                li.page-item
                                                    button.btn(type="submit", name="page", value=pages-1, disabled=page>=pages-1).page-link: i.bi.bi-chevron-double-right
                                        small (A pesquisa está limitada a !{550000/50} páginas)     
                                    .d-flex.flex-row.my-2.justify-content-center.align-items-center
                                        button.btn.w-100(type="submit", formaction="/list", name="term", value="Relator"): u Ver relatores da pesquisa
                                    .d-flex.flex-row.my-2.justify-content-center.align-items-center
                                        button.btn.w-100(type="submit", formaction="/list", name="term", value="Descritores"): u Ver descritores da pesquisa 
                                    .d-flex.flex-row.my-2.justify-content-center.align-items-center
                                        button.btn.w-100(type="submit", formaction="/list", name="term", value="Votação"): u Ver votação da pesquisa
                                    .d-flex.flex-row.my-2.justify-content-center.align-items-center
                                        button.btn.w-100(type="submit", formaction="/list", name="term", value="Meio Processual"): u Ver Meio Processual da pesquisa
                                    .d-flex.flex-row.my-2.justify-content-center.align-items-center
                                        button.btn.w-100(type="submit", formaction="/list", name="term", value="Secção"): u Ver Secção da pesquisa
                                    .d-flex.flex-row.my-2.justify-content-center.align-items-center
                                        button.btn.w-100(type="submit", formaction="/list", name="term", value="Espécie"): u Ver Espécie da pesquisa
                                    .d-flex.flex-row.my-2.justify-content-center.align-items-center
                                        button.btn.w-100(type="submit", formaction="/list", name="term", value="Tipo"): u Ver Tipo da pesquisa
                                    .d-flex.flex-row.my-2.justify-content-center.align-items-center
                                        button.btn.w-100(type="submit", formaction="/list", name="term", value="Jurisprudência"): u Ver Jurisprudência da pesquisa
                    .col-12.col-md-9
                        block main
        footer.d-print-none.mt-2
            .container.row.align-items-center.m-auto.p-4
                a(href="#top").col-12.col-lg-6.align-items-center.d-flex.flex-wrap.py-2
                    i.bi.bi-chevron-up.mr-2
                    | Voltar ao topo
                    
        script.
            window.addEventListener('DOMContentLoaded', function(){
                let elems = Array.from(document.getElementsByClassName(`await-loading`));
                elems.forEach(elem => {
                    fetch(elem.dataset.await).then(response => response.text()).then(text => {
                        elem.classList.remove("await-loading");
                        elem.innerHTML = text;
                    });
                });

                let overallCheckbox = document.getElementById("tribunais-all");
                let checkboxes = document.getElementsByClassName("tribunal-checkbox");
                let setOverallCheckboxState = () => {
                    let checked = false;
                    let indeterminate = false;
                    let c = 0;
                    for( let i = 0; i < checkboxes.length; i++ ) {
                        if( checkboxes[i].checked ) {
                            checked = true;
                            c++;
                        }
                    }
                    overallCheckbox.checked = checked;
                    overallCheckbox.indeterminate = c < checkboxes.length && c > 0;
                }
                if( overallCheckbox ){
                    setOverallCheckboxState();                    
                    overallCheckbox.addEventListener("change", () => {
                        for( let i = 0; i < checkboxes.length; i++ ) {
                            checkboxes[i].checked = overallCheckbox.checked;
                        }
                    });
                    for( let i = 0; i < checkboxes.length; i++ ) {
                        checkboxes[i].addEventListener("change", setOverallCheckboxState);
                    }
                }
            })